// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  isAdmin   Boolean  @default(false)

  orders Order[]
}

model Adress {
  id     Int    @id @default(autoincrement())
  street String
  zip    Int
  city   String
  email  String

  orders Order[]
}

model Product {
  id         Int      @id @default(autoincrement())
  title      String
  price      Int
  imageUrl   String
  desc       String
  stock      Int
  createdAt  DateTime @default(now())
  isArchived Boolean

  categories Category[]
  orderRows  OrderRow[]
}

// model ProductCategory {
//   id         Int        @id @default(autoincrement())
//   product    Product[]
//   categories Category[]
// }

model Category {
  id           Int    @id @default(autoincrement())
  categoryName String

  products Product[]
}

model Order {
  id                Int      @id @default(autoincrement())
  userId            Int      @unique
  createdAt         DateTime
  shippingAddressId Int
  total             Decimal

  user            User       @relation(fields: [userId], references: [id])
  shippingAddress Adress     @relation(fields: [shippingAddressId], references: [id])
  orderRows       OrderRow[]
}

model OrderRow {
  orderId   Int // relation scalar field (used in the `@relation` attribute above)
  productId Int // relation scalar field (used in the `@relation` attribute above)
  quantity  Int
  subTotal  Decimal

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}
